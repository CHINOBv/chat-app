type User {
	id: ID
	name: String
	username: String
	password: String
	rol: String
}
type Message {
	id: ID
	user: ID
	text: String
	date: String
}
type Token {
	token: String!
}

input UserInput {
	id: ID
	name: String!
	username: String!
	password: String!
	rol: String!
}

input MessageInput {
	id: ID
	user: ID
	text: String
	date: String
}

type Query {
	getUsers: [User]
	getUser: User
	getMessages: [Message]
	getUserMessage(id:ID): User
}

type Mutation {
	createUser(input: UserInput): String
	createMessage( input: MessageInput): Message
	authUser(username: String!, password: String!): Token
	clearChat: String
}