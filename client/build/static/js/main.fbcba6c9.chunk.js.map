{"version":3,"sources":["querys/index.js","mutations/index.js","components/chat/Message.jsx","components/chat/MessageCont.jsx","components/chat/MessageForm.jsx","components/chat/Chat.jsx","components/alertas/Error.jsx","components/auth/Login.jsx","components/auth/Regist.jsx","components/layout/CerrarSesion.jsx","components/layout/Header.jsx","components/Routes.jsx","App.js","components/Session.jsx","serviceWorker.js","index.js"],"names":["GET_MESSAGES","gql","USER_ACT","GET_USER_MESSAGE","CREATE_MESSAGE","CREATE_USER","AUTH_USER","CLEAR_CHAT","Message","id","this","props","session","e","history","push","Mname","message","user","text","userMessage","name","className","React","Component","withRouter","MessageCont","state","messages","map","query","variables","key","loading","data","error","getUserMessage","initState","MessageForm","validForm","noValid","trim","mutation","createMessage","refetch","onSubmit","preventDefault","input","setState","placeholder","onChange","target","value","type","disabled","Chat","rol","opt","clearChat","onClick","window","confirm","then","pollInterval","startPolling","stopPolling","getMessages","Error","uk-alert","uk-close","username","password","Login","updateState","clearState","InitSession","authUser","a","localStorage","setItem","token","setTimeout","catch","uk-icon","to","rpassword","Regist","Register","createUser","removeItem","resetStore","cerrarSesionUsuario","NavNoAuth","NavAuth","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Header","barra","getUser","Routes","console","log","rs","exact","path","render","RootSession","Session","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","client","ApolloClient","uri","fetchOptions","credentials","request","operation","getItem","setContext","headers","authorization","cache","InMemoryCache","addTypename","connectToDevTools","onError","networkError","graphQLErrors","ReactDOM","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.fbcba6c9.chunk.js","sourcesContent":["import gql from 'graphql-tag'\n\nexport const GET_MESSAGES = gql`\n\tquery getMessages{\n\t  getMessages{\n\t  \tid\n\t    user\n\t    text\n\t    date\n\t  }\n\t}\t\t\n`;\n\nexport const USER_ACT = gql`\n\tquery getUser{\n\t\tgetUser{\n\t\t\tid\n\t\t\tname\n\t\t\tusername\n\t\t\trol\n\t\t}\n\t}\n`;\n\nexport const GET_USER_MESSAGE = gql`\n\tquery getUserMessage ($id:ID) {\n\t  getUserMessage(id:$id){\n\t    username\n\t    name\n\t    id\n\t    rol\n\t  }\n\t}\n`;","import gql from 'graphql-tag'\n\nexport const CREATE_MESSAGE = gql`\n\tmutation createMessage($input: MessageInput) {\n\t  createMessage(input: $input){\n\t    user\n\t    text\n\t    date\n\t  }\n\t}\n`;\n\nexport const CREATE_USER = gql`\n\tmutation createUser($input: UserInput) {\n\t  createUser(input: $input)\n\t}\n`;\n\nexport const AUTH_USER = gql`\n\tmutation authUser($username: String!, $password: String!){\n\t  authUser(username: $username, password: $password){\n\t    token\n\t  }\n\t}\n`;\nexport const CLEAR_CHAT = gql`\n\tmutation clearChar{\n\t  clearChat\n\t}\t\n`;","import React from 'react';\nimport { withRouter } from 'react-router-dom'\n\nexport class Message extends React.Component {\n\n\trender() {\n\t\t\t\n\t\t\tlet id;\n\t\t\t//let name;\n\t\t\ttry {\n\t\t\t\n\t\t\t\tid = this.props.session.id;\n\t\t\t\t//name = this.props.session.name;\n\t\t\t\t\n\t\t\t} catch(e) {\n\t\t\t\tthis.props.history.push('/login')\t\t\t\t\n\t\t\t}\n\n\t\t\tconst { user, text } = this.props.message;\n\t\t\tconst userMessage = this.props.userMessage;\n\t\t\tlet Mname;\n\n\t\t\tif(userMessage){\n\t\t\t\tMname = this.props.userMessage.name;\n\t\t\t}else {\n\t\t\t\tMname = \"El Usuario Ya No Existe\"\n\t\t\t}\n\t\t\tif(id !== user){\n\t\t\t\treturn (\n\t\t\t\t        <div className=\"text-break\" >\n\t\t\t\t        \t<p className=\"text-muted\">{Mname}</p>\n\t\t\t\t\t\t\t<p>{text}</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t);\n\n\t\t\t}else {\n\t\t\t\treturn(\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p className=\"text-right text-break\">{text}</p>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\n\t}\n\n\n}\n\nexport default withRouter(Message);","import React from 'react'\nimport { Query } from 'react-apollo';\nimport { GET_USER_MESSAGE } from '../../querys';\nimport Message from './Message.jsx'\n\nexport class MessageCont extends React.Component {\n\tstate={\n\t\tid:\"\"\n\t}\n\t\n\trender() {\n\t\t\n\n\t\tconst messages = this.props.messages;\n\t\treturn (\n\t\t\t<div className=\"text-wrap\">\n\t\t\t\t{messages.map( messages =>\n\t\t\t\t\t<Query \n\t\t\t\t\t\tquery={ GET_USER_MESSAGE }\n\t\t\t\t\t\tvariables={{id:messages.user }}\n\t\t\t\t\t\tkey={messages.id}\n\t\t\t\t\t>\n\t\t\t\t    \t{({loading, error, data}) => {\n\t\t\t\t\t\t\t\n\t\t\t\t    \t\tif(loading)\treturn null;\n\t\t\t\t\t\t\t //console.log(data.getUserMessage)\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<Message \n\t\t\t\t\t\t\t\t\tmessage={messages} \n\t\t\t\t\t\t\t\t\tsession={this.props.session} \n\t\t\t\t\t\t\t\t\tuserMessage={data.getUserMessage}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t       \t)\n\t\t\t\t    \t\t\n\t\t\t    \t\t}}   \n\n\t\t\t       \t</Query>\n\t\t       \t)}\n\t\t\t</div>\t\n\t\t)\n\t}\n}\n\nexport default MessageCont","import React from 'react';\nimport { withRouter } from 'react-router-dom'\n\nimport { Mutation } from 'react-apollo'\nimport { CREATE_MESSAGE } from '../../mutations/index.js'\n\nconst initState ={\n\ttext: ''\n}\n\nexport class MessageForm extends React.Component {\n\tstate = {\n\t\ttext: \"\"\n\t}\n\t\n\tvalidForm = () => {\n\t\tconst {text} = this.state;\n\t\t\n\t\tconst noValid = !text.trim();\n\t\tif(text.trim() === \"\"){\n\t\t\treturn noValid;\n\t\t}\n\t}\n\t\n\trender() {\n\t\t\t\t\t\t\t\t//console.log(this.props.session)\n\t\treturn (\n\t\t\t\n\t\t\t<Mutation \n\t\t\t\tmutation={ CREATE_MESSAGE }\n\t\t\t\t\n\t\t\t\t>\n\t\t\t\t{(createMessage, {loading, error, refetch}) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tonSubmit={ e => {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tconst { text } = this.state;\n\t\t\t\t\t\t\t\t\tlet id;\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\tid = this.props.session.id;\n\t\t\t\t\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t\t\t\t\tthis.props.history.push('/login')\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tconst input = {\n\t\t\t\t\t\t\t\t\t\ttext, \n\t\t\t\t\t\t\t\t\t\tuser: id\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tcreateMessage({\n\t\t\t\t\t\t\t\t\t\tvariables: {input}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tthis.setState({...initState})\n\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\t\tclassName=\"uk-textarea\"\n\t\t\t\t\t\t\tplaceholder=\"Escribe Un Mensaje\"\n\t\t\t\t\t\t\tonChange={ e => {\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\ttext: e.target.value\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tvalue={this.state.text}\n\t\t\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\tclassName=\"uk-button uk-button-primary uk-input uk-align-right\"\n\t\t\t\t\t\t\t\ttype=\"submit\" \n\t\t\t\t\t\t\t\tvalue=\"Enviar\" \n\t\t\t\t\t\t\t\tdisabled={ loading || this.validForm()}/>\n\t\t\t\t\t\t</form>        \n\t\t\t        )\n\t\t\t\t}}\n\t\t\t</Mutation>\n\t\t\t\n\t\t)\n\t}\n}\n\nexport default withRouter(MessageForm)","import React, { Fragment } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Query, Mutation } from 'react-apollo';\nimport { GET_MESSAGES } from '../../querys/index.js';\nimport { CLEAR_CHAT } from '../../mutations/index.js'\n\nimport MessageCont from './MessageCont.jsx';\nimport MessageForm from './MessageForm.jsx';\nimport './Chat.css'\n\nexport class Chat extends React.Component {\n\trender() {\n\n\t\tlet rol;\n\t\ttry {\n\t\t\trol = this.props.session.rol;\n\t\t} catch(e){\n\t\t\treturn ''\n\t\t}\n\t//console.log(rol)\n\t\tlet opt;\n\t\tif(rol === \"ADMIN\"){\n\t\t\topt = \n\t\t\t<Mutation mutation={CLEAR_CHAT}>\n\t\t\t\t{ clearChat => (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-danger\"\n\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\tif(window.confirm(\"Quieres Vaciar el Chat?\")){\n\t\t\t\t\t\t\t\tclearChat().then( () => this.props.refetch())\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t>Vaciar Chat</button>\n\t\t\t\t)}\n\t\t\t</Mutation>\n\t\t\t;\n\t\t}\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<h1 className=\"uk-heading-line uk-text-center\"><span>Mensajes</span></h1>\n\t\t\t\t<div className=\"uk-container uk-flex uk-flex-column uk-width-3-3 text-wraptext-break\">\n\t\t\t\t\t<div className=\"uk-width-10-9@s uk-panel uk-panel-scrollable uk-container-large\">\n\t\t\t\t\t\t<Query query={GET_MESSAGES} pollInterval={500}>\n\t\t\t\t\t\t\t{({loading, error, data, startPolling, stopPolling, refetch}) => {\n\t\t\t\t\t\t\t\tif(loading) return null;\n\t\t\t\t\t\t\t\tif(error) return `Error: ${error.message}`\n\t\t\t\t\t\t\t\t//console.log(data)\n\t\t\t\t\t\t\t\tif(data.getMessages){\n\t\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t\t<MessageCont \n\t\t\t\t\t\t\t\t\t\t\tsession={this.props.session} \n\t\t\t\t\t\t\t\t\t\t\trefetch={this.props.refetch} \n\t\t\t\t\t\t\t\t\t\t\tmessages={data.getMessages}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t       \t}}\n\t\t\t\t\t\t</Query>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\t\t<hr/>\n\t\t\t\t\t<div className=\"uk-flex-column uk-flex uk-width-xlarge uk-container\">\n\t\t\t\t\t\t<MessageForm session={this.props.session} refetch={this.props.refetch} />\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t\t{opt}\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nexport default withRouter(Chat)","import React from 'react'\n\n\nconst Error = ({ error }) => {\n\n\treturn (\n\t\t<div className=\"uk-alert-danger\" uk-alert>\n\t\t    <button className=\"uk-alert-close\" uk-close=\"true\"></button>\n\t\t    <p>{error?.message}</p>\n\t\t</div>\n\t)\n}\n\nexport default Error","import React, { Fragment } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { Mutation } from 'react-apollo';\nimport { AUTH_USER } from '../../mutations';\n\nimport Error from '../alertas/Error.jsx';\n\nconst initState = {\n\tusername: \"\",\n\tpassword: \"\",\n\terror: \"\"\n};\n\nexport class Login extends React.Component {\n\tstate={\n\t\t...initState\n\t}\n\n\tupdateState = (e) => {\n\t\tconst { name, value } = e.target;\n\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t})\n\t}\n\n\tclearState = () => {\n\t\tthis.setState({\n\t\t\t...initState\n\t\t})\n\t}\n\n\tvalidForm = () => {\n\t\tconst { username, password } = this.state;\n\t\tconst noValid = !username.trim() || !password.trim();\n\t\treturn noValid;\n\t}\n\t\n\tInitSession = ( e, authUser ) => {\n\t\te.preventDefault();\n\n\t\tauthUser().then( async({ data }) => {\n\t\t\t//console.log(data)\n\t\t\tlocalStorage.setItem(\"token\", data.authUser.token);\n\t\t\tawait //this.props.refetch();\n\t\t\tthis.clearState();\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.props.refetch();\n\t\t\t\tthis.props.history.push(\"/\");\n\t\t\t}, 2000)\n\t\t}).catch( error => this.setState({error}) )\n\t}\n\n\trender() {\n\t\tconst { username, password, error } = this.state;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<h1 className=\"text-center mb-4\">Login</h1>\n\t\t\t\t<div className=\"uk-container uk-position-center uk-padding uk-margin\">\n\t\t\t\t\t{ error && <Error error={error}/> }\n\t\t\t\t\t<Mutation\n\t\t\t\t\t\tmutation={AUTH_USER}\n\t\t\t\t\t\tvariables={{ username, password }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t{(authUser, { loading, error, data }) => {\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t        <Fragment>\n\t\t\t\t\t\t\t\t        <form \n\t\t\t\t\t\t\t\t        \tclassName=\"uk-form uk-form-width-large\"\n\t\t\t\t\t\t\t\t        \tonSubmit={ e => this.InitSession( e, authUser )}\n\t\t\t\t\t\t\t\t        \t>\n\t\t\t\t\t\t\t\t\t  \t<div className=\"uk-margin\">\n\t\t\t\t\t\t\t\t\t        <div className=\"uk-inline\">\n\t\t\t\t\t\t\t\t\t            <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n\t\t\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Nombre de Usuario\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"uk-input uk-margin-small uk-form-width-large\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.updateState}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div className=\"uk-margin\">\n\t\t\t\t\t\t\t\t\t        <div className=\"uk-inline\">\n\t\t\t\t\t\t\t\t\t            <span className=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: lock\"></span>\n\t\t\t\t\t\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"uk-input uk-margin-small uk-form-width-large\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.updateState}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tdisabled={this.validForm()}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"uk-button uk-button-primary\"\n\t\t\t\t\t\t\t\t\t\t\t>Iniciar Sesion</button>\n\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\tclassName=\"uk-button uk-button-secondary uk-margin\"\n\t\t\t\t\t\t\t\t\t\tto=\"/registro\"\n\t\t\t\t\t\t\t\t\t\t> Crear Cuenta Nueva </Link>\n\t\t\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t\t\t)\t\n\t\t\t\t\t\t}}\n\t\t\t\t\t</Mutation>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nexport default withRouter(Login)","import React, { Fragment } from 'react';\nimport { Mutation } from 'react-apollo';\nimport { CREATE_USER } from '../../mutations/index.js';\nimport { withRouter } from 'react-router-dom'\n\nimport Error from '../alertas/Error.jsx'\n\nconst initState = {\n\tname: \"\",\n\tusername: \"\",\n\tpassword: \"\",\n\trpassword: \"\",\n\trol: \"\",\n\terror: \"\"\n}\n\nexport class Regist extends React.Component {\n\tstate={\n\t\t...initState\n\t}\n\n\tvalidForm = () => {\n\t\tconst { name, username, password, rpassword, rol } = this.state;\n\t\tconst noValid =  !name.trim() || !username.trim() || !password.trim() || password !== rpassword || !rol.trim() ;\n\t\t\t\n\t\treturn noValid;\n\t}\n\t\n\tupdateState = (e) => {\n\t\tconst { name, value } = e.target;\n\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t}\n\n\tclearState = () => {\n\t\tthis.setState({...initState});\n\t}\n\n\tRegister = ( e, createUser ) => {\n\t\te.preventDefault();\n\t\tcreateUser().then( data => {\n\t\t\tthis.clearState();\n\t\t\tthis.props.history.push('/login');\n\t\t}).catch( error => this.setState({error}) )\n\t}\n\n\trender() {\n\t\tconst { name, username, password, rol, error } = this.state;\n\t\tconst input = { \n\t\t\tname, \n\t\t\tusername, \n\t\t\tpassword, \n\t\t\trol\n\t\t};\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t\t<h1 className=\"text-center mb-4\">Registro</h1>\n\t\t\t\t\t<div className=\"uk-container uk-position-center uk-padding uk-margin\">\n\t\t\t\t\t\t{error && <Error error={error}/>}\n\t\t\t\t\t\t<Mutation \n\t\t\t\t\t\t\tmutation={CREATE_USER}\n\t\t\t\t\t\t\tvariables={{input}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{( createUser, { loading, error, data }) =>{\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t        <form className=\"uk-form uk-form-width-large\"\n\t\t\t\t\t\t\t\t        \tonSubmit={ e => this.Register( e, createUser )}>\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Nombre\" className=\"uk-input uk-margin-small uk-form-width-large\" name=\"name\" onChange={this.updateState}/>\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"Nombre de Usuario\" uk-icon=\"icon-user\" className=\"uk-input uk-margin-small uk-form-width-large\" name=\"username\" onChange={this.updateState}/>\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"password\" placeholder=\"Password\" className=\"uk-input uk-margin-small uk-form-width-large\" name=\"password\" onChange={this.updateState}/>\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"password\" placeholder=\"Repetir Password\" className=\"uk-input uk-margin-small uk-form-width-large\" name=\"rpassword\" onChange={this.updateState}/>\n\t\t\t\t\t\t\t\t\t\t\t<select name=\"rol\" \n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"uk-select\"\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.updateState}>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\" \">Elegir...</option>\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"USER\">Usuario</option>\n\t\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"submit\" \n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"uk-button uk-button-primary uk-button-large uk-margin uk-flex\"\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={this.validForm()}\n\t\t\t\t\t\t\t\t\t\t\t\t> \n\t\t\t\t\t\t\t\t\t\t\t\tCrear Usuario </button>\n\n\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t)\t\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t</Mutation>\n\t\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t)\n\t}\n}\n\nexport default withRouter(Regist)","import React from 'react'\nimport { ApolloConsumer } from 'react-apollo';\nimport { withRouter } from 'react-router-dom';\n\nconst cerrarSesionUsuario = (user, history) => {\n\tlocalStorage.removeItem(\"token\");\n\n\tuser.resetStore();\n\thistory.push('/login')\n}\n\nconst CerrarSesion = ({history}) => (\n\t\n\t<ApolloConsumer>\n\t\t{user => {\n\n\t\t\treturn(\n\t\t\t\t\n\t\t\t\t<button \n\t\t\t\t\tonClick={() => cerrarSesionUsuario(user, history)}\n\t\t\t\t\tclassName=\"btn btn-light ml-md-2 mt-2 mt-md-0 \" >\n\t\t\t\t\tCerrar Sesion\n\t\t\t\t</button>\n\n\t\t\t);\n\t\t}}\n\t</ApolloConsumer>\n\n);\n\nexport default withRouter(CerrarSesion)","import React, {Fragment} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport CerrarSesion from './CerrarSesion.jsx'\n\nconst Header = ({session}) => {\n  let barra = (session.getUser) ? <NavAuth session={session}/> : <NavNoAuth/> ;\n  return(\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary justify-content-between d-flex mb-4\">\n      <div className=\"container\">\n        {barra}\n      </div>\n    </nav>\n  );\n};\n\nconst NavNoAuth = () => (\n <h3 className=\"navbar-brand text-light font-weight-bold\">\n        Chat\n      </h3>\n);\n\nconst NavAuth = ({ session }) => (\n  <Fragment>\n    <Link to=\"/\" className=\"navbar-brand text-light font-weight-bold\">\n        Chat\n      </Link>\n    <button\n      className=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navegacion\"\n      aria-controls=\"navegacion\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div className=\"collapse navbar-collapse\" id=\"navegacion\">\n      <ul className=\"navbar-nav ml-auto text-right\">\n        <li className=\"nav-item dropdown mr-md-2 mb-2 mb-md-0\">\n\t\t\t<button className=\"btn btn-light ml-md-2 mt-2 mt-md-0 \" >\n\t\t\t\tOpciones\n\t\t\t</button>\n        </li>\n        <CerrarSesion/>\n      </ul>\n    </div>\n  </Fragment>\n\n);\n\nexport default Header;","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Chat from './chat/Chat.jsx';\nimport Login from './auth/Login.jsx';\nimport Regist from './auth/Regist.jsx';\n\nimport Header from './layout/Header.jsx'\n\nexport class Routes extends React.Component {\n\trender() {\n\t\t\n\t\tlet getUser;\n\n\t\ttry {\n\t\t\t\n\t\t\tgetUser = this.props.session.getUser;\n\t\t\t\n\t\t} catch(e){ console.log(e) }\n\t\tconst rs = (getUser) ? \"\" : <Redirect to=\"/login\" />;\n\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t{rs}\n\t\t\t\t<Header session={this.props.session}/>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path= '/' render={ () => <Chat session={getUser} refetch={this.props.refetch}/>}/>\n\t\t\t\t\t<Route exact path= '/login' render={ () => <Login refetch={this.props.refetch} />}/>\n\t\t\t\t\t<Route exact path= '/registro' render={ () => <Regist/>}/>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t)\n\t}\n}\n\nexport default Routes","import React from 'react';\nimport Routes from './components/Routes.jsx'\nimport Session from './components/Session.jsx';\n\nfunction App({ refetch, session }) {\n  return (\n    <Routes refetch={refetch} session={session}/>\n  );\n}\n\nconst RootSession = Session(App);\n\nexport { RootSession }\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport { USER_ACT } from '../querys/index.js'\n\nconst Session = Component => props =>{\n\treturn (\n\t\t<Query query={ USER_ACT } >\n\t\t\t{({ loading, error, data, refetch }) => {\n\t\t\t\tif(loading)\treturn null;\n\t\t\t//console.log(data)\n\t\t\t\treturn <Component {...props} refetch={refetch} session={data}/>\n\t\t\t}}\n\t\t</Query>\n\t)\n}\n\nexport default Session","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { RootSession } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'uikit/dist/js/uikit.min.js';\nimport 'uikit/dist/js/uikit-icons.min.js';\nimport 'uikit/dist/css/uikit.min.css';\n\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { ApolloProvider } from 'react-apollo';\nimport ApolloClient, { InMemoryCache } from 'apollo-boost';\n\nconst client = new ApolloClient({\n\turi: \"/graphql\",\n\n\tfetchOptions: {\n\t\tcredentials: 'include'\n\t},\n\trequest: operation => {\n\t\tconst token = localStorage.getItem('token');\n\t\toperation.setContext({\n\t\t\theaders:{\n\t\t\t\tauthorization: token\n\t\t\t}\n\t\t});\n\t\t//console.log(operation)\n\t},\n\n\tcache: new InMemoryCache({\n\t\taddTypename: false},{\n\t\tconnectToDevTools: true\n\t}),\n\n\tonError: ({ networkError, graphQLErrors }) => {\n\t\tconsole.log(\"Errors GQL: \", graphQLErrors);\n\t\tconsole.log(\"Errors NetWork: \", networkError)\n\t}\n\t\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n  \t<RootSession/>\n  </ApolloProvider>\n\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}